name: PHPStan

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    types: [opened, labeled, synchronize]
    paths:
      - "**/*.php"
      - "composer.json"
      - "composer.lock"
      - "phpstan.neon"
      - "phpstan.neon.dist"

jobs:
  phpstan:
    # Optional: Only run when labeled (remove 'if' condition to run on all PRs)
    if: |
      github.event_name == 'push' || 
      contains(github.event.pull_request.labels.*.name, 'run analysis') ||
      contains(github.event.pull_request.labels.*.name, 'code review')
    
    name: Static Analysis
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2']
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
          tools: composer

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-

      - name: Install Composer Dependencies
        run: |
          composer install --dev --prefer-dist --no-progress --no-interaction

      - name: Create PHPStan configuration if not exists
        run: |
          if [ ! -f phpstan.neon ] && [ ! -f phpstan.neon.dist ]; then
            cat > phpstan.neon << EOF
          parameters:
            level: 5
            paths:
              - .
            excludePaths:
              - vendor/
              - node_modules/
              - tests/
              - .git/
            ignoreErrors:
              # WordPress specific ignores
              - '#Function wp_[a-zA-Z_]+ not found#'
              - '#Constant [A-Z_]+ not found#'
              - '#Variable \$[a-zA-Z_]+ might not be defined#'
            bootstrapFiles:
              - vendor/php-stubs/wordpress-stubs/wordpress-stubs.php
          EOF
          fi

      - name: Install WordPress stubs if not present
        run: |
          if ! composer show php-stubs/wordpress-stubs > /dev/null 2>&1; then
            composer require --dev php-stubs/wordpress-stubs --no-interaction
          fi

      - name: Run PHPStan
        run: |
          # Check if custom PHPStan command exists in composer.json
          if composer run-script --list | grep -q "phpstan"; then
            composer run-script phpstan
          else
            # Use vendor binary directly
            ./vendor/bin/phpstan analyse --memory-limit=1G
          fi

      - name: Generate PHPStan Report
        if: failure()
        run: |
          # Generate detailed report on failure
          if composer run-script --list | grep -q "phpstan"; then
            composer run-script phpstan -- --error-format=table --no-progress > phpstan-report.txt 2>&1 || true
          else
            ./vendor/bin/phpstan analyse --memory-limit=1G --error-format=table --no-progress > phpstan-report.txt 2>&1 || true
          fi
          
          # Output summary for easy reading
          if [ -f phpstan-report.txt ]; then
            echo "## PHPStan Analysis Results" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat phpstan-report.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload PHPStan Report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: phpstan-report-php-${{ matrix.php-version }}
          path: phpstan-report.txt